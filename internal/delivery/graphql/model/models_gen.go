// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Node interface {
	IsNode()
}

// Forgot user password input.
type ForgotPasswordInput struct {
	// User email.
	Email string `json:"email"`
	// New user password.
	Password string `json:"password"`
	// User verification code.
	Code uint64 `json:"code"`
}

// Getting verification code by email address input.
type GetCodeByEmailInput struct {
	// User email address.
	Email string `json:"email"`
}

// Authorization refresh token input.
type RefreshTokenInput struct {
	// Refresh token.
	Token string `json:"token"`
}

// User Sign In input.
type SignInInput struct {
	// Account username.
	Username string `json:"username"`
	// User password
	Password string `json:"password"`
}

// User Sign Up input.
type SignUpInput struct {
	// Account username.
	Username string `json:"username"`
	// User email.
	Email string `json:"email"`
	// User password.
	Password string `json:"password"`
	// User verification code.
	Code uint64 `json:"code"`
}

// Authorization tokens.
type Tokens struct {
	// JWT access token.
	Access string `json:"access"`
	// Refresh token.
	Refresh string `json:"refresh"`
}

// User type.
type User struct {
	// User id.
	ID string `json:"id"`
	// Username.
	Username string `json:"username"`
	// User joined date.
	JoinedIn time.Time `json:"joinedIn"`
	// User last visit date.
	LastVisit time.Time `json:"lastVisit"`
	// User verified status.
	Verified bool `json:"verified"`
	// User avatar url.
	AvatarURL *string `json:"avatarUrl"`
}

func (User) IsNode() {}
